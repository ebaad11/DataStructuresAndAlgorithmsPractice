lengthOfLongestSubstring visualization


use PythonTutor to visualize this problem
https://pythontutor.com/visualize.html#code=def%20lengthOfLongestSubstring%28s%29%3A%0A%20%20%20%20%20%20%20%20%22%22%22%0A%20%20%20%20%20%20%20%20%3Atype%20s%3A%20str%0A%20%20%20%20%20%20%20%20%3Artype%3A%20int%0A%20%20%20%20%20%20%20%20%22%22%22%0A%20%20%20%20%20%20%20%20%0A%20%20%20%20%20%20%20%20%23left%20and%20right%20pointer%20denoting%20the%20size%20of%20the%20window%0A%20%20%20%20%20%20%20%20%23initial%20size%20of%20the%20window%20is%200%0A%20%20%20%20%20%20%20%20%0A%20%20%20%20%20%20%20%20left%3D0%0A%20%20%20%20%20%20%20%20right%3D0%0A%20%20%20%20%20%20%20%20%0A%20%20%20%20%20%20%20%20%0A%20%20%20%20%20%20%20%20%23%20will%20represent%20all%20the%20unique%20items%20in%20the%20sliding%20window%0A%20%20%20%20%20%20%20%20uniqueCharacters%20%3D%20set%28%29%0A%20%20%20%20%20%20%20%20maxLenghtSubstring%20%3D%20len%28set%28%29%29%0A%20%20%20%20%20%20%20%20%0A%20%20%20%20%20%20%20%20%23will%20keep%20moving%20the%20right%20pointer%20%0A%20%20%20%20%20%20%20%20%23until%20we%20reached%20end%20of%20the%20string%20%20%20%20%0A%20%20%20%20%20%20%20%20while%20%28right%20%3C%20len%28s%29%29%3A%0A%20%20%20%20%20%20%20%20%20%20%20%0A%20%20%20%20%20%20%20%20%23First%20Condition%0A%20%20%20%20%20%20%20%20%20%20%20%20%23%20if%20the%20character%20is%20not%20in%20the%20set,%20%0A%20%20%20%20%20%20%20%20%20%20%20%20%23this%20means%20it%20is%20a%20unique%20element%20%0A%20%20%20%20%20%20%20%20%20%20%20%20%23between%20the%20two%20pointer%0A%20%20%20%20%20%20%20%20%20%20%20%20if%20%28s%5Bright%5D%20not%20in%20uniqueCharacters%29%3A%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%23we%20add%20it%20to%20the%20uniqueCharaters%20set%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20uniqueCharacters.add%28s%5Bright%5D%29%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%23move%20the%20right%20pointer%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20right%20%2B%3D1%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%23in%20the%20next%20Iteration%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%23will%20see%20if%20character%20after%20is%20unique%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%23Setting%20the%20max%20lenght%20to%20the%20size%20of%20teh%20set%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%23update%20when%20a%20new%20threshold%20for%20size%20is%20reached%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20maxLenghtSubstring%20%3D%20max%28maxLenghtSubstring,%20len%28uniqueCharacters%29%29%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%0A%20%20%20%20%20%20%20%20%23Second%20Condition%0A%20%20%20%20%20%20%20%20%20%20%20%20%23when%20the%20character%20is%20already%20in%20the%20set%20%0A%20%20%20%20%20%20%20%20%20%20%20%20%23we%20remove%20the%20left%20most%20chacter%20that%20is%20in%20the%20set%0A%20%20%20%20%20%20%20%20%20%20%20%20%23and%20we%20move%20the%20left%20pointer%0A%20%20%20%20%20%20%20%20%20%20%20%20%23we%20keep%20doing%20this%20with%20iterations%20until%20we%20reach%20%0A%20%20%20%20%20%20%20%20%20%20%20%20%23a%20state%20where%20there%20are%20only%20unique%20items%20in%20the%20uniqueCharacters%20set%0A%20%20%20%20%20%20%20%20%20%20%20%20%0A%20%20%20%20%20%20%20%20%20%20%20%20else%3A%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20uniqueCharacters.remove%28s%5Bleft%5D%29%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20left%2B%3D1%0A%20%20%20%20%20%20%20%20%0A%20%20%20%20%20%20%20%20%23%20we%20return%20the%20maxLenghtSubstring%0A%20%20%20%20%20%20%20%20return%20maxLenghtSubstring%0A%0A%0Aprint%28lengthOfLongestSubstring%28%22abca%22%29%29%0A%23%20print%28lengthOfLongestSubstring%28%22pwwkew%22%29%29%0A%23%20print%28lengthOfLongestSubstring%28%22bbbbb%22%29%29&cumulative=false&curInstr=34&heapPrimitives=nevernest&mode=display&origin=opt-frontend.js&py=3&rawInputLstJSON=%5B%5D&textReferences=false

